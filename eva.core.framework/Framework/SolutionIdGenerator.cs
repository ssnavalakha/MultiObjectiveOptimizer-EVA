using System;
using System.Data;

namespace eva.core.framework.framework
{
    /// <summary>
    /// A Class responsible for creating unsed ids for solutions
    /// </summary>
   public sealed class SolutionIdGenerator
    {
        /// <summary>
        /// the api to fetch ids from
        /// </summary>
        public IDbApi dbapi { get; set; }
        /// <summary>
        /// the current free id
        /// </summary>
        private int currentId;
        /// <summary>
        /// the first id generated by this class
        /// </summary>
        private int initialId;
        /// <summary>
        /// the total number of free ids availabale
        /// </summary>
        private int range;
        /// <summary>
        /// the table name to fetch ids from
        /// </summary>
        private string tableName;

        /// <summary>
        /// Initialize this class with the table to name to fetch ids from and the number of ids to be fetched
        /// </summary>
        /// <param name="tableName">the table to fetch ids from</param>
        /// <param name="estimatedRange">the total number of ids to be fetched</param>
        /// <param name="api">the api to fetch ids from</param>
        public SolutionIdGenerator(String tableName, int estimatedRange,IDbApi api)
        {
            this.tableName = tableName;
            range = estimatedRange;
            dbapi = api;
            initialId = dbapi.fetchNewAvailableIds(tableName, estimatedRange);
            currentId = initialId;
        }

        /// <summary>
        /// get the next available free id
        /// </summary>
        /// <returns>the next available free id</returns>
        public int getId()
        {
            int temp = currentId;
            currentId = currentId + 1; // increase the current id by one
            if(currentId>=initialId+range) // check if ranged has expired if yes fetch new ids from database
            {
                initialId = dbapi.fetchNewAvailableIds(tableName, range);
                currentId = initialId;
            }
            return temp;
        }
    }
}
